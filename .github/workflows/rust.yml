name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.4-alpine
        env:
          POSTGRES_DB: auth_server_rust
          POSTGRES_PASSWORD: 2UtcMAAvNuBHPqK9
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Clippy
      run: cargo clippy -- -W clippy::pedantic

    - name: Build
      run: cargo build --verbose

    - name: Run tests / generate code coverage
      run: |
        mkdir -p ${HOME}/.config/auth_server_rust && \
        psql $DATABASE_URL < ./scripts/invitations.sql && \
        psql $DATABASE_URL < ./scripts/users.sql && \
        cargo test --verbose && \
        cargo install cargo-tarpaulin && \
        cargo tarpaulin --verbose --all-features --workspace --out Xml
      env:
        DATABASE_URL: postgresql://postgres:2UtcMAAvNuBHPqK9@localhost:5432/auth_server_rust
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        AWS_DEFAULT_REGION: us-east-1
        SENDING_EMAIL_ADDRESS: ${{secrets.SENDING_EMAIL_ADDRESS}}

    - name: Upload to codecov.io
      uses: codecov/codecov-action@v1.0.2
      with:
        token: ${{secrets.CODECOV_TOKEN}}

    - name: Archive code coverage results
      uses: actions/upload-artifact@v1
      with:
        name: code-coverage-report
        path: cobertura.xml
